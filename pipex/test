#!/bin/bash

red="\033[0;31m"
green="\033[0;32m"
nocolor="\033[0m"

# Go to script's location
cd $(dirname $0)

if [ $# -ge 1 ]
then
	repo="$1"
else
	repo="repo/"
fi

../util/printtitle "NORMINETTE"
../util/normcheck $repo

../util/printtitle "MAKEFILE"
if [ ! -f "$repo/Makefile" ]
then
	echo -e "${red}Missing Makefile, KO${nocolor}"
	exit 1
fi
rules=$(../util/rulescheck $repo)
if [ $rules == "no" ]
then
	echo -e "${red}Missing rules in Makefile, KO${nocolor}"
	exit 1
fi
echo -e "${green}All rules in Makefile, OK${nocolor}"

../util/printtitle "COMPILE"
make -C repo/ -s all
../util/compilecheck $?
if [ $? -ne 0 ]
then
	exit 1
fi

../util/printtitle "USAGE TEST"
repo/pipex
if [ $? -ne 0 ]
then
	echo -e "${green}Command returns failure, OK${nocolor}"
else
	echo -e "${red}Command returns success, KO${nocolor}"
fi

../util/printtitle "TEST WITH FIRST COMMAND EMPTY"
repo/pipex tests/file1.txt "" "cat" file1.out
if [ $? -eq 0 ]
then
	echo -e "${green}Command returns success, OK${nocolor}"
else
	echo -e "${red}Command returns failure, KO${nocolor}"
fi
<tests/file1.txt "" | "cat" >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST WITH SECOND COMMAND EMPTY"
repo/pipex tests/file1.txt "cat" "" file1.out
if [ $? -ne 0 ]
then
	echo -e "${green}Command returns failure, OK${nocolor}"
else
	echo -e "${red}Command returns success, KO${nocolor}"
fi
<tests/file1.txt "cat" | "" >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST WITH TWO EMPTY COMMANDS"
repo/pipex tests/file1.txt "" "" file1.out
if [ $? -ne 0 ]
then
	echo -e "${green}Command returns failure, OK${nocolor}"
else
	echo -e "${red}Command returns success, KO${nocolor}"
fi
<tests/file1.txt "" | "" >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST WITH INVALID COMMAND"
repo/pipex tests/file1.txt "k" "cat" file1.out
if [ $? -eq 0 ]
then
	echo -e "${green}Command returns success, OK${nocolor}"
else
	echo -e "${red}Command returns failure, KO${nocolor}"
fi
<tests/file1.txt k | cat >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST LS/WC WITH INVALID INPUT"
repo/pipex fakefile.fake "ls -l" "wc -l" file1.out
<fakefile.fake ls -l | wc -l >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST LS/WC"
repo/pipex tests/file1.txt "ls -l" "wc -l" file1.out
<tests/file1.txt ls -l | wc -l >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST CAT/CAT"
repo/pipex tests/file1.txt "cat" "cat" file1.out
<tests/file1.txt cat | cat >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST CAT/CAT WITH LOCKED OUTPUT"
cat tests/file1.txt > locked1.out
cat tests/file1.txt > locked2.out
chmod -w locked1.out locked2.out
repo/pipex tests/file1.txt "cat" "cat" locked1.out
<tests/file1.txt cat | cat >locked2.out
../util/testdiff locked1.out locked2.out
rm -f locked1.out locked2.out

../util/printtitle "TEST GREP/WC"
repo/pipex tests/file1.txt "grep a1" "wc -w" file1.out
<tests/file1.txt grep a1 | wc -w >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "TEST WITH THREE COMMANDS"
rm -f file1.out
repo/pipex tests/file1.txt "cat" "grep a" "wc -l" file1.out
if [ $? -ne 0 ]
then
	echo -e "${green}Command returns failure, OK${nocolor}"
else
	echo -e "${red}Command returns success, KO${nocolor}"
fi
if [ -f file1.out ]
then
	echo -e "${red}Test KO${nocolor}"
else
	echo -e "${green}Test OK${nocolor}"
fi

../util/printtitle "TEST WITH HERE_DOC"
rm -f file1.out
repo/pipex here_doc END "grep a" "wc -l" file1.out
if [ $? -ne 0 ]
then
	echo -e "${green}Command returns failure, OK${nocolor}"
else
	echo -e "${red}Command returns success, KO${nocolor}"
fi
if [ -f file1.out ]
then
	echo -e "${red}Test KO${nocolor}"
else
	echo -e "${green}Test OK${nocolor}"
fi

if [ $rules != "bonus" ]
then
	../util/printtitle "NO BONUS"
	exit 0
fi

../util/printtitle "BONUS COMPILE"
make -C repo/ -s bonus
../util/compilecheck $?
if [ $? -ne 0 ]
then
	exit 1
fi

../util/printtitle "BONUS TEST WITH THREE COMMANDS"
repo/pipex tests/file1.txt "cat" "grep a" "wc -l" file1.out
<tests/file1.txt cat | grep a | wc -l >file2.out
../util/testdiff file1.out file2.out

../util/printtitle "BONUS TEST WITH HERE_DOC"
rm -f file1.out file2.out
cat tests/file1.txt > file1.out
cat tests/file1.txt > file2.out
repo/pipex here_doc END "grep E" "wc -l" file1.out <tests/file2.txt
<<END grep E | wc -l >>file2.out
$(cat tests/file2.txt | grep -v '^END$')
END
cat file1.out
echo "P"
cat file2.out
../util/testdiff file1.out file2.out

# Clean up
make -C repo/ -s clean
rm -f file1.out file2.out